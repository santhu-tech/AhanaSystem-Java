Class note-Postgres :

Employee 

emp_id name email salary doj dep 

Create a table :  //Create a table 

create table table_name(Column_name 1,column_name2 ,Column_name3,etc);

create table employee (emp_id int ,name varchar(100),email varchar(100),salary decimal(7,2),dep varchar(50),doj Timestamp);

java ,pyhton datatype -->int ==whole numbers ,float ,double-->Store decimal numbers 

Insert the data : //writing data

insert into tablename  ( column_name1,column_name2,column_name3 ,etc )
values(column_name1_values,etc..);

insert into employee(101,'santhiya','santhiya@gmail.com','1000','consulting');

Read the data : 

Select * from table_name ;

update my data : //update

update table_name set column_name='Column_value' where column_name='Column_value';
update employee set name='Laxmi' where emp_id=101;

Delete :
 
delete from table_name where column_name='column_value'; 

delete from employee where name='peter';

Constraints : -->kind of rule applied to your column 

Primary key -->Unique identifiers ,must unique values ,cannot contains any null values 

employee -->emp_id PRIMARY KEY 
organization -->employee ,salary ,Department database ,Performance 

Not NULL -->name notnull

UNIQUE  -->email not null unique 
 
DEFAULT  -->salary not null Default 30000.00;

acc_type -->savings ,current --

Data refining :
clauses :
where  -->relation operators ,logical operators ,IN ,Not in ,between
orderby --> default it will work as a asceding order 
Distinct --> unique data's it will give 
Limit -->
Like --> %a
%a%

Salary you need to arrange in the form of ascending order ?

employee whose salary greate than >30000?

update emp_id ='1' you want update the revised salary ?



List out only top 3 employees ?

List out whose name starts with or contains particular character?


acc_type not null default 'savings'

Data types 
Numeric -->int ,double,float,decimal  -->1003.55  DECIMAL (5,2)
String -->varchar()
Date -->date ,CURRENT DATE 
Boolean -->Boolean 

Autoincrement  -->SERIAL 

emp_id serial primarykey



Decimal (5,2)  total 5 digit 


100.00

-999.99 to +999.99

Decimal(10,2) total 10 digit after decimal 2 digit 

13456781.23


or --->Condition 1 or condition 2 
either one is true 

and -->condition 1 and condition 2 

both is true 


Forgien key 

...
Relationships

Joins 

Views 

Subquer.- : s 


Java application connecting with PostgreSQL using JDBC --->


Aggregate fun :-->Mathematical fun 

sum,avg,min,max,count

sum of all employee salary?
avg of the employee working days ?
min salary?
max salary?
count the employee whose is getting more than 1L salary ?


Count ,Group by -->IT department people ,finance department people 

group by ,having ,where -->

Group by along with having clauses --->applying conditions to group of rows 

Group by along where clauses  -->filters based on rows 

where salary >70000

where clauses along with that cannot use having clauses 

where clauses cannot use aggregate fun

having clauses with aggregate fun

Table:Paymnet

Customer -id amount 

1              200

2              300

3               246

4               190

select customer_id ,sum(amount) amount from payment group by  customer-id having sum(amount)<=200 order by desc;



Forgein key :


Cutstomers:

Create table Customers(
cust_id SERIAL PRIMARY KEY,
cust_name Varchar(100) not null);

orders:

create table orders(
ord_id SERILA PRIMARY KEY ,
ord_date Date Not null,
price Numeric Not null,
cust_id Integer not null,
FOREIGN KEY(cust_id) REFERENCES customers (cust_id));


Joins -->Default Inner joins 

 -->Select (columns) from table 1  Join table 2 on oreder.cust_id =Customer.cust_id;


Left join
Right join
Cross joins 


